generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  notes      Note[]
  comments   Comment[]
  likedNotes LikeNote[]
  followedBy UserFollow[] @relation("followedBy")
  following  UserFollow[] @relation("following")
}

model UserFollow {
  followedBy   User @relation("followedBy", fields: [followedById], references: [id])
  followedById Int

  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int

  @@id([followingId, followedById])
}

model Note {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  content     String
  views       Int      @default(0)
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
  idUser      Int

  likes    LikeNote[]
  comments Comment[]
  user     User       @relation(fields: [idUser], references: [id])
}

model LikeNote {
  idUser Int
  user   User @relation(fields: [idUser], references: [id])

  idNote Int
  note   Note @relation(fields: [idNote], references: [id])

  @@id([idUser, idNote])
}

model Comment {
  id      Int    @id @default(autoincrement())
  idUser  Int?
  idNote  Int?
  comment String

  note Note? @relation(fields: [idNote], references: [id])
  user User? @relation(fields: [idUser], references: [id])
}
